{
    "templates": [
        {
            "platform": "Embedded Linux (Preview)",
            "name": "Embedded Linux Project",
            "description": "",
            "detail": "",
            "path": "embedded_linux",
            "projectHostType": "container",
            "boardId": "raspberrypi",
            "type": "",
            "tag": "general"
        },
        {
            "platform": "Arduino",
            "name": "Generic ESP32 boards",
            "description": "",
            "detail": "Use Generic ESP32 boards (e.g. Azure IoT Kit, M5Stack) with only device code.",
            "path": "esp32_device",
            "projectHostType": "workspace",
            "boardId": "esp32",
            "type": "Basic",
            "tag": "general"
        },
        {
            "platform": "Arduino",
            "name": "Generic ESP32 boards with Azure IoT Hub",
            "description": "",
            "detail": "Use Generic ESP32 boards (e.g. Azure IoT Kit, M5Stack) with Azure IoT Hub, such as sending sensor data to cloud.",
            "path": "esp32_iothub",
            "projectHostType": "workspace",
            "boardId": "esp32",
            "type": "IotHub",
            "tag": "general"
        },
        {
            "platform": "Arduino",
            "name": "MXChip IoT DevKit",
            "description": "",
            "detail": "Use MXChip IoT DevKit with only device code.",
            "path": "devkit_device",
            "projectHostType": "workspace",
            "boardId": "devkit",
            "type": "Basic",
            "tag": "general"
        },
        {
            "platform": "Arduino",
            "name": "MXChip IoT DevKit with Azure IoT Hub",
            "description": "",
            "detail": "Use MXChip IoT DevKit with Azure IoT Hub, such as sending sensor data to cloud.",
            "path": "devkit_iothub",
            "projectHostType": "workspace",
            "boardId": "devkit",
            "type": "IotHub",
            "tag": "general"
        },
        {
            "platform": "Arduino",
            "name": "MXChip IoT DevKit With Azure Functions",
            "description": "",
            "detail": "Use MXChip IoT DevKit with Azure IoT Hub and processes device data further in Azure Functions.",
            "path": "devkit_azurefunctions",
            "projectHostType": "workspace",
            "boardId": "devkit",
            "type": "AzureFunctions",
            "tag": "general"
        },
        {
            "platform": "Arduino",
            "name": "$(issue-opened) My device is not in the list...",
            "description": "",
            "detail": "",
            "path": "",
            "projectHostType": "workspace",
            "boardId": "",
            "type": "no_device",
            "tag": "general"
        },
        {
            "platform": "",
            "name": "Visual Studio Project Using ANSI C Via IoT Hub Device Connection String",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C Visual Studio Project via IoT Hub device connection string.",
            "path": "ansic_vs_connectionstring",
            "projectHostType": "workspace",
            "boardId": "",
            "type": "VisualStudio",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "DeviceConnectionString"
        },
        {
            "platform": "",
            "name": "Visual Studio Project Using ANSI C Via DPS(Device Provisioning Service) symmetric key",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C Visual Studio Project via DPS symmetric key.",
            "path": "ansic_vs_iotcsaskey",
            "projectHostType": "workspace",
            "boardId": "",
            "type": "VisualStudio",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "SymmetricKey"
        },
        {
            "platform": "",
            "name": "CMake Project Using ANSI C Via IoT Hub Device Connection String",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C CMake Project via IoT Hub device connection string.",
            "path": "ansic_cmake_connectionstring",
            "projectHostType": "workspace",
            "boardId": "",
            "type": "CMake",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "DeviceConnectionString"
        },
        {
            "platform": "",
            "name": "CMake Project Using ANSI C Via DPS(Device Provisioning Service) symmetric key",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C CMake Project via DPS symmetric key.",
            "path": "ansic_cmake_iotcsaskey",
            "projectHostType": "workspace",
            "boardId": "",
            "type": "CMake",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "SymmetricKey"
        },
        {
            "platform": "",
            "name": "IoT DevKit Project Using ANSI C Via IoT Hub Device Connection String",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C IoT DevKit Project via IoT Hub device connection string.",
            "path": "ansic_devkit_connectionstring",
            "projectHostType": "workspace",
            "boardId": "",
            "type": "IoTDevKit",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "DeviceConnectionString"
        },
        {
            "platform": "",
            "name": "IoT DevKit Project Using ANSI C Via DPS(Device Provisioning Service) symmetric key",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C IoT Dev Project via DPS symmetric key.",
            "path": "ansic_devkit_iotcsaskey",
            "projectHostType": "workspace",
            "boardId": "",
            "type": "IoTDevKit",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "SymmetricKey"
        },
        {
            "platform": "",
            "name": "CMake Project Simulator Using ANSI C Via DPS(Device Provisioning Service) symmetric key",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C CMake Project in a container via DPS symmetric key.",
            "path": "ansic_simulator_iotcsaskey",
            "projectHostType": "container",
            "boardId": "",
            "type": "Simulator",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "SymmetricKey"
        },
        {
            "platform": "",
            "name": "CMake Project Simulartor Using ANSI C Via IoT Hub Device Connection String",
            "description": "",
            "detail": "Template for DigitalTwin Code Generator to generate ANSI C CMake Project in a container via IoT Hub device connection string.",
            "path": "ansic_simulator_connectionstring",
            "projectHostType": "contianer",
            "boardId": "",
            "type": "Simulator",
            "language": "ansic",
            "tag": "digitaltwin",
            "connectionType": "DeviceConnectionString"
        }
    ]
}